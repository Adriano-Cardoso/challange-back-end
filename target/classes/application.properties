
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#spring.jpa.properties.hibernate.hbm2ddl.delimiter=;


# datasource
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url= jdbc:h2:mem:financas
spring.datasource.username=sa
spring.datasource.password=

# jpa
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console



#### PostgreSQL
#spring.datasource.url=jdbc:postgresql://localhost:5432/financas
#spring.datasource.username=postgres
#spring.datasource.password=Risadinha@1234
##spring.datasource.driver-class-name=org.postgresql.Driver
##
###drop n create table again, good for testing, comment this in production
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop
#
#spring.mvc.pathmatch.matching-strategy=ant-path-matcher



